var g=Object.defineProperty;var y=(o,e,t)=>e in o?g(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var d=(o,e,t)=>y(o,typeof e!="symbol"?e+"":e,t);import{a as w,S as _,R as S}from"./RectShape-Dx93Qlty.js";import{R as m}from"./RingShape-ygHJY8pK.js";import{c}from"./index-C1s-hTSf.js";import{d as x,j as P,o as M,b as R}from"./index-C8_KvqLc.js";class u extends w{constructor({fillColor:t="#000",strokeColor:s="#000",corners:i=3,startAngle:h=270,points:n=[],...r},a=!0){super({...r});d(this,"fillColor");d(this,"strokeColor");d(this,"corners");d(this,"startAngle");d(this,"points");d(this,"_points",[]);this.fillColor=t,this.strokeColor=s,this.corners=i,this.startAngle=(h%360+360)%360,this._points=n,a?this.points=this.getPoints():this.points=[]}get type(){return"StarShape"}calcPoints(){const t=[];for(let s=0,i=this.startAngle;s<this.corners;s++,i+=360/this.corners)t.push(this.width/2+this.width/2*Math.cos(i/180*Math.PI),this.height/2+this.height/2*Math.sin(i/180*Math.PI));return t}getPoints(){let t=[];if(this._points.length>0){const s=Array.isArray(this._points[0])?"array":typeof this._points[0];for(let i=0;i<this._points.length;i++){const h=Array.isArray(this._points[i])?"array":typeof this._points[i];if(h!==s){t=[];break}switch(h){case"array":t.push(...this._points[i]);break;case"number":t.push(this._points[i]);break;case"object":t.push(this._points[i].x,this._points[i].y);break}}}else t=[];return t.length<6&&(t=this.calcPoints()),t}update({x:t,y:s,width:i,height:h,fillColor:n,strokeColor:r,corners:a,startAngle:p,points:f}){typeof t<"u"&&(this.x=t),typeof s<"u"&&(this.y=s),typeof i<"u"&&(this.width=i),typeof h<"u"&&(this.height=h),(typeof i<"u"||typeof h<"u")&&this.__updateSize({width:this.width,height:this.height}),typeof n<"u"&&(this.fillColor=n),typeof r<"u"&&(this.strokeColor=r),typeof a<"u"&&(this.corners=a),typeof p<"u"&&(this.startAngle=(p%360+360)%360),typeof f<"u"&&(this._points=f),this.points=this.getPoints()}isInShape(t,s){const i=t-this.x*this.dpr,h=s-this.y*this.dpr;return i<0||h<0||i>this.width*this.dpr||h>this.height*this.dpr?!1:this.__ctx.getImageData(0,0,this.width*this.dpr,this.height*this.dpr).data[(h*this.width*this.dpr+i)*4+3]>0}render(t){super.render(t);const{__ctx:s}=this;s.fillStyle=this.fillColor,s.beginPath(),s.moveTo(this.points[0]*this.dpr,this.points[1]*this.dpr);for(let i=2;i<this.points.length;i+=2)s.lineTo(this.points[i]*this.dpr,this.points[i+1]*this.dpr);s.fill(),t.drawImage(this.__canvas,this.x*this.dpr,this.y*this.dpr,this.width*this.dpr,this.height*this.dpr)}}class l extends u{constructor({innerRadius:t=.382,fillColor:s="#000",strokeColor:i="#000",corners:h=3,startAngle:n=270,...r}){super({fillColor:s,strokeColor:i,corners:h,startAngle:n,...r},!1);d(this,"innerRadius");this.innerRadius=c(t,0,1),this.points=this.getPoints()}get type(){return"StarShape"}calcPoints(){const t=[];for(let s=0,i=this.startAngle;s<this.corners*2;s++,i+=360/this.corners/2)s%2===1?t.push(this.width/2+this.width/2*this.innerRadius*Math.cos(i/180*Math.PI),this.height/2+this.height/2*this.innerRadius*Math.sin(i/180*Math.PI)):t.push(this.width/2+this.width/2*Math.cos(i/180*Math.PI),this.height/2+this.height/2*Math.sin(i/180*Math.PI));return t}update({x:t,y:s,width:i,height:h,innerRadius:n,fillColor:r,strokeColor:a,corners:p,startAngle:f}){typeof n<"u"&&(this.innerRadius=c(n,0,1)),super.update({x:t,y:s,width:i,height:h,fillColor:r,strokeColor:a,corners:p,startAngle:f})}}const v=x({__name:"ShapeExample",setup(o){return P(()=>{const e=window.devicePixelRatio,t=new _({width:window.innerWidth,height:window.innerHeight,dpr:e}),s=new l({x:100,y:100,width:100,height:200,fillColor:"#ff0000",innerRadius:.1,dpr:e});t.addShape(s);const i=new l({x:100,y:300,width:100,height:100,fillColor:"#ff0000",corners:5,dpr:e});t.addShape(i);const h=new l({x:100,y:400,width:100,height:100,fillColor:"#ff0000",corners:6,dpr:e});t.addShape(h);const n=new u({x:100,y:500,width:100,height:100,fillColor:"#ff0000",corners:3,dpr:e});t.addShape(n);const r=new S({x:300,y:200,width:100,height:200,fillColor:"#ff0000",radius:20,dpr:e});t.addShape(r);const a=new m({rx:500,ry:300,outerRadius:70,innerRadius:30,fillColor:"#ff0000",dpr:e});t.addShape(a),s.addEventListener("click",()=>{console.log(222)}),t.render()}),(e,t)=>(M(),R("div"))}});export{v as default};
