var k=Object.defineProperty;var B=(p,o,n)=>o in p?k(p,o,{enumerable:!0,configurable:!0,writable:!0,value:n}):p[o]=n;var q=(p,o,n)=>B(p,typeof o!="symbol"?o+"":o,n);const b=(p,o,n)=>new Promise((e,t)=>{const r=p.add(o,n);r.onsuccess=()=>{e(r.result)},r.onerror=t}),I=(p,o,n)=>new Promise((e,t)=>{const r=p.put(o,n);r.onsuccess=()=>{e(r.result)},r.onerror=t}),y=(p,o)=>new Promise((n,e)=>{const t=p.openCursor(o),r=[];t.onsuccess=()=>{var s;t.result?(r.push({key:t.result.primaryKey,...t.result.value}),(s=t.result)==null||s.continue()):n(r)},t.onerror=e}),G=(p,o,n)=>new Promise((e,t)=>{const r=p.getAll(o,n);r.onsuccess=()=>e(r.result),r.onerror=t}),d=(p,o)=>new Promise((n,e)=>{const t=p.get(o);t.onsuccess=()=>n(t.result),t.onerror=e}),E=(p,o,n)=>{new Promise((e,t)=>{p.indexNames.contains(o)||t(new Error(`索引 ${o} 不存在`));const r=p.index(o),s=IDBKeyRange.only(n),c=r.getAllKeys(s);c.onsuccess=function(a){const u=a.target.result;if(u.length===0)return e(0),0;let i=0;const l=[];u.forEach(m=>{const S=p.delete(m);S.onsuccess=function(){if(i++,i===u.length)if(l.length>0)t(new Error(`部分删除失败: ${l.join(", ")}`));else{console.log(`成功删除 ${i} 条记录`),e(i);return}},S.onerror=function(){if(S.error&&l.push(S.error.toString()),i++,i===u.length)if(l.length>0)t(new Error(`部分删除失败: ${l.join(", ")}`));else{console.log(`成功删除 ${i} 条记录`),e(i);return}}})},c.onerror=function(a){t(a.target.error)}})};class L{constructor(){q(this,"dbname","deepseek");q(this,"version",3)}open(){return new Promise((o,n)=>{const e=indexedDB.open(this.dbname,this.version);e.onerror=t=>{n(t)},e.onsuccess=t=>{var r;o((r=t==null?void 0:t.target)==null?void 0:r.result),t.target},e.onupgradeneeded=t=>{var c;const r=(c=t==null?void 0:t.target)==null?void 0:c.result,s=t.oldVersion;if(s<1){if(r.objectStoreNames.contains("config")||r.createObjectStore("config",{keyPath:"name"}).createIndex("name","name",{unique:!0}),r.objectStoreNames.contains("group")||r.createObjectStore("group",{autoIncrement:!0}).createIndex("name","name",{unique:!0}),!r.objectStoreNames.contains("chat")){const a=r.createObjectStore("chat",{autoIncrement:!0});a.createIndex("name","name",{unique:!1}),a.createIndex("groupKey","groupKey",{unique:!1})}if(!r.objectStoreNames.contains("content")){const a=r.createObjectStore("content",{autoIncrement:!0});a.createIndex("role","role",{unique:!1}),a.createIndex("chatKey","chatKey",{unique:!1}),a.createIndex("userContentKey","userContentKey",{unique:!1})}}if(s<2){if(r.objectStoreNames.contains("groupchat")||r.createObjectStore("groupchat",{autoIncrement:!0}).createIndex("name","name",{unique:!0}),!r.objectStoreNames.contains("groupmember")){const a=r.createObjectStore("groupmember",{autoIncrement:!0});a.createIndex("name","name"),a.createIndex("chatKey","chatKey",{unique:!1})}if(!r.objectStoreNames.contains("groupcontent")){const a=r.createObjectStore("groupcontent",{autoIncrement:!0});a.createIndex("role","role",{unique:!1}),a.createIndex("roleName","roleName",{unique:!1}),a.createIndex("chatKey","chatKey",{unique:!1}),a.createIndex("userContentKey","userContentKey",{unique:!1})}}if(s<3){const u=t.target.transaction.objectStore("groupmember");u.deleteIndex("name"),u.createIndex("name","name")}}})}async updateConfig(o){const n=await this.open(),e=n.transaction(["config"],"readwrite"),t=e.objectStore("config"),s=t.index("name").get(o.name);s.onsuccess=()=>{if(s.result){const c=s.result;c.value=o.value,t.put(c)}else t.add(o)},e.oncomplete=()=>{n.close()}}async saveConfig(o){const n={...o},t=(await this.open()).transaction(["config"],"readwrite"),r=t.objectStore("config"),s=r.index("name");(await G(s,[Object.keys(n)])).forEach(a=>{a.value=n[a.name],r.put(a),delete n[a.name]});for(const a in n)r.put({name:a,value:n[a]});return await new Promise((a,u)=>{t.oncomplete=a,t.onerror=u})}async getConfig(){const o=await this.open(),n=o.transaction(["config"],"readonly"),t=n.objectStore("config").getAll();return n.oncomplete=()=>{o.close()},await new Promise((r,s)=>{t.onsuccess=()=>{r(t.result)},t.onerror=s})}async getConfigByName(o){const n=await this.open(),e=n.transaction(["config"],"readonly"),r=e.objectStore("config").index("name");return e.oncomplete=()=>{n.close()},await d(r,o)}async addGroup(o,n=""){const e=await this.open(),t=e.transaction(["group"],"readwrite"),r=t.objectStore("group"),s=r.index("name");if(await d(s,o))return{msg:"分组名称已存在",success:!0};const a=await b(r,{name:o,sysPreset:n});return await new Promise((u,i)=>{t.oncomplete=()=>{u({msg:"添加成功",success:!0,data:a}),e.close()},t.onerror=i})}async updateGroup(o,n,e=""){const t=await this.open(),r=t.transaction(["group"],"readwrite"),s=r.objectStore("group"),c=await d(s,o);if(!c)return{msg:"分组不存在",success:!1};const a=s.index("name"),u=await G(a,n);return c.name!==n&&u.length>0?{msg:"分组名称已存在",success:!1}:(c.name=n,e&&(c.sysPreset=e),s.put(c,o),await new Promise((i,l)=>{r.oncomplete=()=>{i({msg:"修改成功",success:!0}),t.close()},r.onerror=l}))}async getGroupList(){const o=await this.open(),n=o.transaction(["group"],"readwrite"),e=n.objectStore("group");return n.oncomplete=()=>{o.close()},await y(e)}async getGroup(o){const n=await this.open(),e=n.transaction(["group"],"readwrite"),t=e.objectStore("group");e.oncomplete=()=>{n.close()};const r=await d(t,o);return r&&(r.key=o),r}async deleteGroup(o){const n=await this.open(),e=n.transaction(["group"],"readwrite");return e.objectStore("group").delete(o),await new Promise((r,s)=>{e.oncomplete=()=>{r({msg:"删除成功",success:!0}),n.close()},e.onerror=s})}async deleteChat(o){const n=await this.open(),e=n.transaction(["chat"],"readwrite");return e.objectStore("chat").delete(o),await new Promise((r,s)=>{e.oncomplete=()=>{r({msg:"删除成功",success:!0}),n.close()},e.onerror=s})}async addChat(o,n){const e=await this.open(),t=e.transaction(["chat"],"readwrite");return t.objectStore("chat").add({name:o,groupKey:n,lastMsg:""}),await new Promise((s,c)=>{t.oncomplete=()=>{s({msg:"添加成功",success:!0}),e.close()},t.onerror=c})}async sendChatContent({content:o,groupKey:n,chatKey:e,assContentKey:t,userContentKey:r}){var P,N,O,D,M;const s=await this.open(),c=s.transaction(["chat","content","group","config"],"readwrite"),u=c.objectStore("config").index("name");if(!((P=await d(u,"appid"))==null?void 0:P.value))return c.abort(),s.close(),Promise.resolve({msg:"请配置appid",success:!1,data:null});const l=c.objectStore("chat"),m=c.objectStore("content"),S=c.objectStore("group"),x=await d(S,n);let h=[];x.sysPreset&&h.push({role:"system",content:x.sysPreset});let g=[];if(e){const f=m.index("chatKey");g=await y(f,e),h=h.concat(g.map(K=>({role:K.role,content:K.content})))}else e=await b(l,{name:"",groupKey:n,lastMsg:""});const C=await d(l,e);let w=t,j=r;if(r){const f=await d(m,r);f.content=o,await I(m,f,r)}else j=await b(m,{role:"user",content:o,sort:(((N=g[g.length-1])==null?void 0:N.sort)||0)+1,chatKey:e||0});if(!t||((O=g[g.length-1])==null?void 0:O.key)!==t)w=await b(m,{role:"assistant",content:"",useContent:o,userContentKey:j,sort:(((D=g[g.length-1])==null?void 0:D.sort)||0)+1,chatKey:e});else{const f=await d(m,t);f.content="",f.reason="",await I(m,f,t)}return t&&r?(h.pop(),h.pop(),h.push({role:"user",content:o})):t?((M=g[g.length-1])==null?void 0:M.key)===t&&h.pop():h.push({role:"user",content:o}),C.lastMsg=o,await I(l,C,e),await new Promise((f,K)=>{c.oncomplete=()=>{f({msg:"成功",success:!0,data:{chatKey:e,contentKey:w,historyContent:h}}),s.close()},c.onerror=K})}async getChatListByGroupKey(o){const n=await this.open(),e=n.transaction(["chat"],"readonly"),r=e.objectStore("chat").index("groupKey"),s=await y(r,o);return await new Promise((c,a)=>{e.oncomplete=()=>{c({msg:"成功",success:!0,data:s}),n.close()},e.onerror=a})}async importContentList({contentList:o,groupKey:n}){const e=await this.open(),t=e.transaction(["chat","content"],"readwrite"),r=t.objectStore("chat"),s=t.objectStore("content"),c=await b(r,{name:"",groupKey:n,lastMsg:o[o.length-1].content});let a=-1,u=0;for(;u<o.length;){const{role:i,content:l}=o[u],m=await b(s,{role:i,content:l,chatKey:c,userContentKey:i==="assistant"?a:void 0,sort:u+1});i==="user"&&(a=m),u++}return await new Promise((i,l)=>{t.oncomplete=()=>{i({msg:"成功",success:!0,data:{chatKey:c}}),e.close()},t.onerror=l})}async getContentListByGhatKey(o){const n=await this.open(),e=n.transaction(["content"],"readonly"),r=e.objectStore("content").index("chatKey"),s=await y(r,o);return await new Promise((c,a)=>{e.oncomplete=()=>{c({msg:"成功",success:!0,data:s}),n.close()},e.onerror=a})}async getChat(o){const n=await this.open(),e=n.transaction(["chat"],"readonly"),t=e.objectStore("chat");e.oncomplete=()=>{n.close()};const r=await d(t,o);return r&&(r.key=o),r}async updateChat(o,n){const e=await this.open(),t=e.transaction(["chat"],"readwrite"),r=t.objectStore("chat"),s=await d(r,o);return Object.keys(n).forEach(c=>{s[c]=n[c]}),await I(r,s,o),await new Promise((c,a)=>{t.oncomplete=()=>{c({msg:"成功",success:!0,data:null}),e.close()},t.onerror=a})}async updateContent(o,{content:n,reason:e,isStream:t}){const r=await this.open(),s=r.transaction(["content"],"readwrite"),c=s.objectStore("content"),a=await d(c,o);return n&&(a.content=n),e&&(a.reason=e),typeof t=="boolean"&&(a.isStream=t),await I(c,a,o),await new Promise((u,i)=>{s.oncomplete=()=>{u({msg:"成功",success:!0,data:null}),r.close()},s.onerror=i})}async deleteContent(o){const n=await this.open(),e=n.transaction(["content"],"readwrite"),t=e.objectStore("content"),r=t.index("userContentKey");return(await y(r,o)).forEach(c=>t.delete(c.key)),t.delete(o),await new Promise((c,a)=>{e.oncomplete=()=>{c({msg:"成功",success:!0,data:null}),n.close()},e.onerror=a})}async getContentByUserContentKey(o){const n=await this.open(),e=n.transaction(["content"],"readonly"),r=e.objectStore("content").index("userContentKey"),s=await d(r,o);return await new Promise((c,a)=>{e.oncomplete=()=>{c({msg:"",success:!0,data:s}),n.close()},e.onerror=a})}async addGroupChat(o,n=""){const e=await this.open(),t=e.transaction(["groupchat"],"readwrite"),r=t.objectStore("groupchat"),s=r.index("name");if(await d(s,o))return{msg:"群聊名称已存在",success:!0};const a=await b(r,{name:o,sysPreset:n});return await new Promise((u,i)=>{t.oncomplete=()=>{u({msg:"添加成功",success:!0,data:a}),e.close()},t.onerror=i})}async updateGroupChat({key:o,name:n,sysPreset:e,memberList:t,username:r,userPreset:s}){console.log(JSON.stringify(t));const c=await this.open(),a=c.transaction(["groupchat","groupmember"],"readwrite"),u=a.objectStore("groupchat"),i=a.objectStore("groupmember"),l=await d(u,o);if(!l)return{msg:"群聊不存在",success:!1};const m=u.index("name"),S=await G(m,n);if(l.name!==n&&S.length>0)return{msg:"群聊名称已存在",success:!1};if(l.name=n,typeof e=="string"&&(l.sysPreset=e),typeof r=="string"&&(l.username=r),typeof s=="string"&&(l.userPreset=s),u.put(l,o),t){const x=i.index("chatKey"),h=await y(x,o),g=[],C=[];h.forEach(w=>{const j=t.findIndex(P=>P.key===w.key);j>-1?(g.push({...w,...t[j]}),t.splice(j,1)):w.key&&C.push(w.key)}),await Promise.allSettled(C.map(w=>i.delete(w))),await Promise.allSettled(g.map(w=>i.put(w,w.key))),await Promise.allSettled(t.map(w=>b(i,{...w,chatKey:o})))}return await new Promise((x,h)=>{a.oncomplete=()=>{x({msg:"修改成功",success:!0}),c.close()},a.onerror=g=>{console.log(g),h(g)}})}async getGroupChatList(){const o=await this.open(),n=o.transaction(["groupchat"],"readwrite"),e=n.objectStore("groupchat");return n.oncomplete=()=>{o.close()},await y(e)}async getGroupChat(o){const n=await this.open(),e=n.transaction(["groupchat","groupmember"],"readwrite"),t=e.objectStore("groupchat"),s=e.objectStore("groupmember").index("chatKey");e.oncomplete=()=>{n.close()};const c=await d(t,o);if(c){c.key=o;const a=await y(s,o);c.memberList=a}return c}async deleteGroupChat(o){const n=await this.open(),e=n.transaction(["groupchat"],"readwrite");return e.objectStore("groupchat").delete(o),await new Promise((r,s)=>{e.oncomplete=()=>{r({msg:"删除成功",success:!0}),n.close()},e.onerror=s})}async getGroupContentListByGhatKey(o){const n=await this.open(),e=n.transaction(["groupcontent"],"readonly"),r=e.objectStore("groupcontent").index("chatKey"),s=await y(r,o);return await new Promise((c,a)=>{e.oncomplete=()=>{c({msg:"成功",success:!0,data:s}),n.close()},e.onerror=a})}async sendGroupChatContent(o,n,e){var i,l;const t=await this.open(),r=t.transaction(["groupcontent"],"readwrite"),s=r.objectStore("groupcontent"),c=s.index("chatKey"),a=await y(c,o);e&&await b(s,{...e,sort:(((i=a[a.length-1])==null?void 0:i.sort)||0)+1,chatKey:o});const u=await b(s,{role:"assistant",content:"",name:n,sort:(((l=a[a.length-1])==null?void 0:l.sort)||0)+2,chatKey:o});return await new Promise((m,S)=>{r.oncomplete=()=>{m({msg:"成功",success:!0,data:{list:a,contentKey:u}}),t.close()},r.onerror=S})}async clearGroupChatContent(o){const n=await this.open(),e=n.transaction(["groupcontent"],"readwrite"),t=e.objectStore("groupcontent");return await E(t,"chatKey",o),await new Promise((r,s)=>{e.oncomplete=()=>{r({msg:"成功",success:!0,data:!0}),n.close()},e.onerror=s})}async updateGroupContent(o,{content:n,reason:e,isStream:t}){const r=await this.open(),s=r.transaction(["groupcontent"],"readwrite"),c=s.objectStore("groupcontent"),a=await d(c,o);return n&&(a.content=n),e&&(a.reason=e),typeof t=="boolean"&&(a.isStream=t),await I(c,a,o),await new Promise((u,i)=>{s.oncomplete=()=>{u({msg:"成功",success:!0,data:null}),r.close()},s.onerror=i})}}export{L as D};
