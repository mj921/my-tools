const m=n=>new Promise((d,l)=>{let c=n.url;const i=n.method||"get",r=n.data,a=n.params,t=n.headers,u=n.success||function(){},f=n.fail||function(){},e=new XMLHttpRequest;if(a){const s=new URLSearchParams(a);c=c+(c.includes("?")?"&":"?")+s.toString()}if(e.open(i,c,!0),e.setRequestHeader("Content-Type","application/json"),t)for(const s in t)e.setRequestHeader(s,t[s]);if(e.onreadystatechange=function(){if(e.readyState===4){let s=e.responseText;try{s=JSON.parse(e.responseText)}catch{}if(e.status>=200&&e.status<300)u(s),d(s);else{console.log(e);const o=new Error("Request failed. Returned status of "+e.status);o.response=s,f(o),l(o)}}},r)if((t==null?void 0:t["Content-Type"])==="application/x-www-form-urlencoded"){const s=new FormData;for(const o in r)s.set(o,r[o]);e.send(s)}else e.send(JSON.stringify(r));else e.send()}),p=(n,d)=>new Promise((l,c)=>{const i=`jsonpCallback_${new Date().getTime()}_${Math.random().toString(16).slice(2)}`;window[i]=t=>{delete window[i],l(t)};const r=n.split("?");n=[r[0],[`callback=${i}`,r[1],new URLSearchParams(d||{}).toString()].filter(t=>t).join("&")].join("?");const a=document.createElement("script");a.src=n,document.head.appendChild(a),a.onload=()=>{document.head.removeChild(a)},a.onerror=t=>{c(t)}});export{p as j,m as r};
